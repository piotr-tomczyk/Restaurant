(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),c=t(667),l=t.n(c),d=new URL(t(941),t.b),s=i()(r());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital@1&display=swap);"]);var p=l()(d);s.push([e.id,"/* @font-face {\n    font-family: 'Roboto';\n    src: url('./Roboto-LightItalic.ttf') format('ttf');\n    font-weight: 600;\n    font-style: normal;\n  } */\nbody{\n    margin:0;\n    padding: 0;\n}\n.main{\n    font-family: 'Roboto', sans-serif;\n}\n.content{\n    background: url("+p+");\n    min-height: 100vh;\n}\n#head{\n    background: lightgoldenrodyellow;\n    display:flex;\n    justify-content: space-between;\n    padding: 1rem;\n    position:fixed;\n    top:0;\n    width:100%;\n    z-index:100;\n}\n#title{\n    padding-top: 3em;\n    text-align: center;\n}\n.component{\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap:3rem;\n    background-color: antiquewhite;\n    margin-left: 35vw;\n    margin-right: 35vw;\n    border-style: solid;\n    border-radius: 15px;\n    border-color: orange;\n    border-width: 4px;\n    margin-bottom: 1.5rem;\n    margin-top:1.5rem;\n}\n.textContent{\n    padding-bottom: 1rem;\n}\n#menu{\n    display:flex;\n    gap: 1em;\n    padding-right: 2em;\n}\n.photo{\n    width: 15vw;\n}\n.content {\n    color: red;\n}\n#menuPage{\n    color:teal;\n}\n#aboutPage{\n    color:darkblue;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;;;KAKK;AAEL;IACI,QAAQ;IACR,UAAU;AACd;AACA;IACI,iCAAiC;AACrC;AACA;IACI,mDAA8B;IAC9B,iBAAiB;AACrB;AACA;IACI,gCAAgC;IAChC,YAAY;IACZ,8BAA8B;IAC9B,aAAa;IACb,cAAc;IACd,KAAK;IACL,UAAU;IACV,WAAW;AACf;AACA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,8BAA8B;IAC9B,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;IACpB,iBAAiB;IACjB,qBAAqB;IACrB,iBAAiB;AACrB;AACA;IACI,oBAAoB;AACxB;AACA;IACI,YAAY;IACZ,QAAQ;IACR,kBAAkB;AACtB;AACA;IACI,WAAW;AACf;AACA;IACI,UAAU;AACd;AACA;IACI,UAAU;AACd;AACA;IACI,cAAc;AAClB",sourcesContent:["/* @font-face {\n    font-family: 'Roboto';\n    src: url('./Roboto-LightItalic.ttf') format('ttf');\n    font-weight: 600;\n    font-style: normal;\n  } */\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:ital@1&display=swap');\nbody{\n    margin:0;\n    padding: 0;\n}\n.main{\n    font-family: 'Roboto', sans-serif;\n}\n.content{\n    background: url('./icon.jpeg');\n    min-height: 100vh;\n}\n#head{\n    background: lightgoldenrodyellow;\n    display:flex;\n    justify-content: space-between;\n    padding: 1rem;\n    position:fixed;\n    top:0;\n    width:100%;\n    z-index:100;\n}\n#title{\n    padding-top: 3em;\n    text-align: center;\n}\n.component{\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap:3rem;\n    background-color: antiquewhite;\n    margin-left: 35vw;\n    margin-right: 35vw;\n    border-style: solid;\n    border-radius: 15px;\n    border-color: orange;\n    border-width: 4px;\n    margin-bottom: 1.5rem;\n    margin-top:1.5rem;\n}\n.textContent{\n    padding-bottom: 1rem;\n}\n#menu{\n    display:flex;\n    gap: 1em;\n    padding-right: 2em;\n}\n.photo{\n    width: 15vw;\n}\n.content {\n    color: red;\n}\n#menuPage{\n    color:teal;\n}\n#aboutPage{\n    color:darkblue;\n}"],sourceRoot:""}]);const A=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var s=[].concat(e[d]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=o.base?l[0]+o.base:l[0],s=a[d]||0,p="".concat(d," ").concat(s);a[d]=s+1;var A=t(p),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var m=r(u,o);o.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var l=o(e,r),d=0;d<a.length;d++){var s=t(a[d]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=l}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},941:(e,n,t)=>{e.exports=t.p+"a993ea91dc7974abf2a0.jpeg"},725:(e,n,t)=>{e.exports=t.p+"78bb9a7e29eca880fe6c.jpg"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{function e(e="title",n=!1,t="sample text"){let o=document.createElement("div");o.className="component";let r=document.createElement("h2");if(r.className="title",r.textContent=e,o.appendChild(r),n){let e=new Image;e.src=n,e.className="photo",o.appendChild(e)}let a=document.createElement("div");return a.className="textContent",a.textContent=t,o.appendChild(a),o}function n(){console.log("i exist: mainPage");let n=document.createElement("div");n.id="mainPage",n.className="content";let t=document.createElement("h2");return t.id="title",t.textContent="RESTAURACJA MUADIB",n.appendChild(t),n.appendChild(e(" ",!1,"Restaurant of MUA DIB is the best.")),n.appendChild(e("THE BEST DISHES",!1,"We offer a dishes in true Arrakin style ðŸ˜ˆ.")),n}var o=t(725),r=t(379),a=t.n(r),i=t(795),c=t.n(i),l=t(569),d=t.n(l),s=t(565),p=t.n(s),A=t(216),u=t.n(A),m=t(589),f=t.n(m),h=t(426),C={};C.styleTagTransform=f(),C.setAttributes=p(),C.insert=d().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=u(),a()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals;var g=!0,v=!1,b=!1;let y=document.querySelector(".main");function I(){for(;"head"!=y.lastChild.id;)y.removeChild(y.lastChild)}function B(t){console.log(t.target.id),"MainPage"!=t.target.id&&"left"!=t.target.id?"AboutPage"!=t.target.id?"Menu"!=t.target.id||b||(g=!1,v=!1,b=!0,I(),y.appendChild(function(){console.log("i exist: menuPage");let n=document.createElement("div");n.id="menuPage",n.className="content";let t=document.createElement("h2");return t.id="title",t.textContent="RESTAURACJA MUADIB",n.appendChild(t),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n.appendChild(e("Steak",o,"From the Stworzyciel ðŸ˜®.")),n}())):v||(g=!1,v=!0,b=!1,I(),y.appendChild(function(){console.log("i exist: aboutPage");let n=document.createElement("div");n.id="aboutPage",n.className="content";let t=document.createElement("h2");return t.id="title",t.textContent="RESTAURACJA MUADIB",n.appendChild(t),n.appendChild(e("CONTACT",!1,"Piotr Tomczyk: s175816@student.pg.edu.pl \n Adress: Arrakis, Cave")),n}())):g||(g=!0,v=!1,b=!1,I(),y.appendChild(n()))}y.appendChild(function(){let e=document.createElement("div");e.id="head";let n=document.createElement("div");n.id="left",n.textContent="RESTAURACJA MUADIB",n.addEventListener("click",B);let t=document.createElement("div");t.id="menu";let o=document.createElement("div");o.textContent="MainPage",o.id="MainPage",o.addEventListener("click",B);let r=document.createElement("div");r.textContent="About",r.addEventListener("click",B),r.id="AboutPage";let a=document.createElement("div");return a.textContent="Menu",a.addEventListener("click",B),a.id="Menu",e.appendChild(n),t.appendChild(o),t.appendChild(a),t.appendChild(r),e.appendChild(t),e}()),y.appendChild(n())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,